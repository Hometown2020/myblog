<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>construct3 on My blog</title>
    <link>/tags/construct3.html</link>
    <description>Recent content in construct3 on My blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Oct 2020 20:24:08 +0000</lastBuildDate><atom:link href="/tags/construct3/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何在construct3上开发游戏&amp;游戏展示</title>
      <link>/post/%E5%A6%82%E4%BD%95%E5%9C%A8construct3%E4%B8%8A%E5%BC%80%E5%8F%91%E6%B8%B8%E6%88%8F%E6%B8%B8%E6%88%8F%E5%B1%95%E7%A4%BA.html</link>
      <pubDate>Wed, 21 Oct 2020 20:24:08 +0000</pubDate>
      
      <guid>/post/%E5%A6%82%E4%BD%95%E5%9C%A8construct3%E4%B8%8A%E5%BC%80%E5%8F%91%E6%B8%B8%E6%88%8F%E6%B8%B8%E6%88%8F%E5%B1%95%E7%A4%BA.html</guid>
      <description>前言 为了更快体验做出游戏的快乐，我们可以直接采用construct3 提供的游戏模板。这里我用的是基础模板中的塔防游戏。我们在这个的基础上加进来“植物大战僵尸”的一些元素，包括内容和玩法。
step1.背景图设置 为了更贴近游戏主题，我们首先修改背景图，将原背景换成“植物们”的草坪。如图
双击Wall，导入背景图关掉背景编辑器，背景修改完成 step2.添加新元素 双击空白处，选择出现界面中的Sprite创建元素
此时页面不会有什么变化，再次左键单击空白处，出现动画编辑器，此时将要添加的元素图像导进，关闭编辑器。关闭后，在右上角的项目中找到刚创建的元素，左键单击，在左边的属性中修改有关属性，如，修改元素名称、大小等，注意，此处的修改将应用于所有实例对象，而在场景中的修改只应用于单个实例对象。
这里由于“豌豆射手”的功能是炮台，所以还需给它添加行为，在右上角项目中找到“豌豆射手”，右键编辑行为，添加新行为，选择炮台，成功添加后，如图此时再回到左侧属性处修改炮台的属性值，如图“寒冰射手”，僵尸，子弹的创建流程相同，此处便不再多说。注意，僵尸的行为时“寻路”“闪烁”；子弹的添加的行为是“子弹”；另外新建元素时生成的实例对象不可以删掉，否则无法再对该对象进行实例化，通常可以通过复制粘贴进行实例化。
此处我还添加了其他4个对象plant1，plant2用于后面点击购买植物操作，“begin”：开始游戏，“pause”：暂停出怪
好了，现在基本元素添加完毕，可以进入最激动人心的环节了-游戏设计。
step3.游戏设计 先说下设计的蓝图。 僵尸：出现速度和生命值都随时间的增加而增加，当僵尸到达终点，会随机销毁一个豌豆射手和一个寒冰射手； 豌豆射手：攻击僵尸，减少其生命值直至销毁僵尸； 寒冰射手：更强大的攻击能力，更快的攻击速度，更广的攻击范围，同时带有减速效果；寒冰射手可直接购买也可以由豌豆射手升级得到
此处角色的设计跟植物大战僵尸中的有些不同，不过，这也正是设计游戏的快乐，不是吗~
蓝图绘制好了，就可以开始实现了；此时不得不说construct3对入门者的友好了，不用学习新的语言，也不用辛苦的打代码。
首先先新建分组，一个好的分组可以让游戏逻辑更加清晰；这里将僵尸和两种植物的实现分开。首先是对游戏的控制： 设置全局变量Begin,当游戏开始是置为True，暂停时置为false；具体实现：添加事件到“Enemy control”-&amp;gt;Touch-&amp;gt;轻按对象-&amp;gt;目标选择对象“Begin”-&amp;gt;完成，添加动作-&amp;gt;系统-&amp;gt;设置布尔值-&amp;gt;变量：Begin，值：True-&amp;gt;完成。 这样就创建好一个事件了。Pause事件创建同上。
僵尸的实现： 游戏开始后每过一段时间都会生成新的僵尸，所以事件的条件是时隔和游戏开始；出怪，也就是在图层上生成僵尸的实例对象，之后实例对象要到达终点，就要寻路，还要有寻路的初始速度、加速度和最大速度。设置好了之后就要让僵尸沿路线移动。具体实现如图为了降低游戏难度，这里设置了每隔EnemySpawnTime秒金币加1。
添加多个条件的方法：右键已有条件-&amp;gt;添加其他条件 添加动作的流程：添加动作-&amp;gt;选择动作的对象-&amp;gt;修改对象动作-&amp;gt;修改参数 注意“系统”对象的使用； 注意坐标值最好不要用具体的数值，否则修改起来麻烦且容易出错。
僵尸生命值，出现速度随时间变快 实现：每过一段时间增加health,减少EnemySpawnTime僵尸受到攻击 实现：受到攻击时生命值减少（可能还会减少速度），当生命值&amp;lt;=0时僵尸对象销毁，销毁时生成BulletlmpactParticles对象作为特效，同时增加金钱数量和游戏分数僵尸到达终点，自己消失，随机销毁一个豌豆射手和一个寒冰射手 实现：销毁僵尸实例对象，同时随机销毁一个豌豆射手实例对象和一个寒冰射手实例对象豌豆射手的实现
被添加到场景中时，锁定目标，发射子弹；如果攻击范围内没有目标则销毁子弹添加豌豆射手到场景 首先确定金额是否足够；购买的直接结果是对应的布尔值plant1置为true,此时应该设置plant2为false，这样将以最后一次购买为准，防止同时买了两种射手；购买成功后在场景中点击才生成实例对象，此时plant1应重新设为false，同时金钱减少； 如果新买的所放位置本来就有，视为购买失败，此时应该返回金额，并销毁对象；由于销毁对象时无法区别原有的和新的，所以两个都会被销毁，此时应该再创建新的对象。
寒冰射手的实现
寒冰射手的实现跟豌豆射手几乎一致，所以直接附上实现关于得分，金钱数以及购买界面 购买界面的图片即plant1,plant2：添加元素后的实例对象直接放在目标位置就可以了
文字：空白处双击左键，选择Text，再次单击左键，双击生成的文本框，修改文本内容；这样，无需改变的文本就设置好了； 对于时时改变的文本：回到事件编辑界面，添加事件，让系统在每一帧都更改文本内容 现在，一个新的小游戏就完成了。
看完整个流程，是不是觉得原来开发小游戏其实也不难，那就快上机试试吧~
这里小编附上这个游戏的链接，大家亲自可以感受一下效果~ 植物大战僵尸塔防版</description>
    </item>
    
  </channel>
</rss>
